# project Makefiles must define ROOT before including this file

.DEFAULT_GOAL := all

TARGET_ARCH_DOS := i386-dos
TARGET_ARCH_WINNT := i586-winnt
TARGET_ARCH_LINUX := i586-linux
TARGET_ARCH_LOCAL := $(shell gcc -dumpmachine)

ifeq (${TARGET},local)
    TARGET_ARCH := ${TARGET_ARCH_LOCAL}

    # compilation programs
    CC=gcc -c -I. -I${COMMON} -d TARGET_ID=0
    AR=ar
    LD=gcc -Wl,-s
    ASM=C:/Development/fasm/fasm

    # compilation macros
    compile = ${CC} -o ${1} ${2}
    archive = ${AR} -r ${1} ${2}
    link = ${LD} -o ${1} ${2}

	BINSUFFIX=
else
   	# compilation macros
   	dospath = $(subst /,\\,"$(strip ${1})")
   	compile = ${CC} -fo=$(call dospath,${1}) ${2}
   	#compile = ${CC} -fo=$(call dospath,${1}) $(foreach file,${2},$(call dospath,$file))
   	archive = ${AR} -r ${1} ${2}
   	link = ${LD} name $(call dospath,${1}) file $(foreach file,${2},$(call dospath,${file}),)

    export WATCOM=C:/Development/WATCOM
	export WLINK_LNK=${WATCOM}/binnt/wlink.lnk

	ifeq (${TARGET},winnt)
    	TARGET_ARCH := ${TARGET_ARCH_WINNT}

    	# compilation programs
    	CC=${WATCOM}/binnt/wcc386 -q -i=$(call dospath,${WATCOM}/h) -i=. -i=$(call dospath,${COMMON}) -bt=nt -5 -dTARGET_ID=2
    	AR=ar
    	LD=${WATCOM}/binnt/wlink system nt

		BINSUFFIX=w
	else ifeq (${TARGET},linux)
    	TARGET_ARCH := ${TARGET_ARCH_LINUX}

    	# compilation programs
    	CC=${WATCOM}/binnt/wcc386 -q -i=$(call dospath,${WATCOM}/h) -i=. -i=$(call dospath,${COMMON}) -bt=linux -5 -dTARGET_ID=3
    	AR=ar
    	LD=${WATCOM}/binnt/wlink system linux option noextension

		BINSUFFIX=l
	else
    	# dos is default target
    	TARGET_ARCH := ${TARGET_ARCH_DOS}
	
    	# compilation programs
    	CC=${WATCOM}/binnt/wcc -q -i=$(call dospath,${WATCOM}/h) -i=. -i=$(call dospath,${COMMON}) -bt=DOS -3 -dTARGET_ID=1
    	AR=ar
    	LD=${WATCOM}/binnt/wlink system dos
	
		BINSUFFIX=
	endif
endif

stripdots = $(subst .,,$(strip ${1}))

ASM=C:/Development/fasm/fasm
ZIP=zip
UNZIP=unzip

# source locations
ASMSRC=${ROOT}/asm
TOOLS=${ROOT}/tools
COMMON=${TOOLS}/common

# build output locations
BUILD=${ROOT}/build
LIB=${BUILD}/lib/${TARGET_ARCH}
BIN=${BUILD}/bin/${TARGET_ARCH}
DMKIT=${BUILD}/dmkit

# object file locations
TOOLS_LIB=${LIB}/tools
COMMON_LIB=${TOOLS_LIB}/common
RESET_LIB=${TOOLS_LIB}/reset
CFG_LIB=${TOOLS_LIB}/cfg
PATCH_LIB=${TOOLS_LIB}/patch
BINPATCH_LIB=${TOOLS_LIB}/binpatch
TLK_LIB=${TOOLS_LIB}/tlk

# binary locations
U2BIN=${BIN}/u2
U3BIN=${BIN}/u3
U5BIN=${BIN}/u5
UTILBIN=${BIN}/util

# other locations
PATCHES=${ROOT}/patches
EXT=${ROOT}/ext
DATA=${ROOT}/data
DOC=${ROOT}/doc

# U2 game locations
U2U16=${ROOT}/game/u2orig.u16
U2UC=${ROOT}/game/u2orig.uc
U2MAP=${ROOT}/game/u2orig.map
U2GOG=${ROOT}/game/u2orig.gog

# game locations (for installation & patching)
U2ORIGINAL=${U2MAP}
U3ORIGINAL=${ROOT}/game/u3orig
U5ORIGINAL=${ROOT}/game/u5orig
U2UPGRADE=${ROOT}/game/u2up
U3UPGRADE=${ROOT}/game/u3up
U5UPGRADE=${ROOT}/game/u5up

# upgrade package versions
U2VER=2.0
U3VER=3.3
U5VER=1.0

# upgrade package directories
U2PKG=${BUILD}/u2pkg
U3PKG=${BUILD}/u3pkg
U5PKG=${BUILD}/u5pkg

# upgrade packages
U2PKG_ZIP=${BUILD}/u2upgrade-${U2VER}.zip
U3PKG_ZIP=${BUILD}/u3upgrade-${U3VER}.zip
U5PKG_ZIP=${BUILD}/u5upgrade-${U5VER}.zip

# patcher locations
PATCH=${BUILD}/bin/${TARGET_ARCH_LOCAL}/util/binpat
DIFF=${BUILD}/bin/${TARGET_ARCH_LOCAL}/util/bindiff

${BIN}:
	mkdir -p ${BIN}

${U2BIN}:
	mkdir -p ${U2BIN}

${U3BIN}:
	mkdir -p ${U3BIN}

${U5BIN}:
	mkdir -p ${U5BIN}

${UTILBIN}:
	mkdir -p ${UTILBIN}
